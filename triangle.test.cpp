//@	{"target":{"name":"triangle.test"}}

#include "./triangle.hpp"

#include "./euclidian_space.hpp"

#include "testfwk/testfwk.hpp"

#include <array>
#include <map>

TESTCASE(geosimd_triangle_resolve_from_array)
{
	geosimd::indirect_triangle T_ref{0, 1, 2};

	using loc = geosimd::euclidian_space<float, 3>::location;
	using vec = geosimd::euclidian_space<float, 3>::displacement;

	auto const origin = loc{1.0f, 2.0f, 4.0f};

	std::array<loc, 3> verts{
		origin + 16.0f*vec{0.0f, 0.25f, 0.0f},
		origin + 16.0f*vec{2.0f, 0.0f, 0.0f},
		origin + 16.0f*vec{1.5f, 1.0f, 1.0f}
	};

	auto res = resolve(T_ref, verts);
	EXPECT_EQ(res.p1, verts[0]);
	EXPECT_EQ(res.p2, verts[1]);
	EXPECT_EQ(res.p3, verts[2]);
}

TESTCASE(geosimd_triangle_resolve_from_map)
{
	geosimd::indirect_triangle T_ref{std::string{"A"},
		std::string{"B"},
		std::string{"C"}};

	using loc = geosimd::euclidian_space<float, 3>::location;
	using vec = geosimd::euclidian_space<float, 3>::displacement;

	auto const origin = loc{1.0f, 2.0f, 4.0f};

	std::map<std::string, loc> verts{
		{"A", origin + 16.0f*vec{0.0f, 0.25f, 0.0f}},
		{"B", origin + 16.0f*vec{2.0f, 0.0f, 0.0f}},
		{"C", origin + 16.0f*vec{1.5f, 1.0f, 1.0f}}
	};

	auto res = resolve(T_ref, verts);
	EXPECT_EQ(res.p1, verts["A"]);
	EXPECT_EQ(res.p2, verts["B"]);
	EXPECT_EQ(res.p3, verts["C"]);
}

TESTCASE(geosimd_triangle_project_from_above_corner_bottom)
{
	using loc = geosimd::euclidian_space<float, 3>::location;
	using vec = geosimd::euclidian_space<float, 3>::displacement;

	auto const origin = loc{0.0f, 0.0f, 0.0f};

	geosimd::triangle T{
		origin + 16.0f*vec{0.0f, 1.0f, 0.0f},
		origin + 16.0f*vec{1.0f, 0.0f, 0.5f},
		origin + 16.0f*vec{1.0f, 1.0f, 1.0f}
	};

	std::array<loc, 153> points{
		loc{16.0f,  0.0f,  8.0f},
		loc{15.0f,  1.0f,  7.5f},
		loc{16.0f,  1.0f,  8.5f},
		loc{14.0f,  2.0f,  7.0f},
		loc{15.0f,  2.0f,  8.0f},
		loc{16.0f,  2.0f,  9.0f},
		loc{13.0f,  3.0f,  6.5f},
		loc{14.0f,  3.0f,  7.5f},
		loc{15.0f,  3.0f,  8.5f},
		loc{16.0f,  3.0f,  9.5f},
		loc{12.0f,  4.0f,  6.0f},
		loc{13.0f,  4.0f,  7.0f},
		loc{14.0f,  4.0f,  8.0f},
		loc{15.0f,  4.0f,  9.0f},
		loc{16.0f,  4.0f, 10.0f},
		loc{11.0f,  5.0f,  5.5f},
		loc{12.0f,  5.0f,  6.5f},
		loc{13.0f,  5.0f,  7.5f},
		loc{14.0f,  5.0f,  8.5f},
		loc{15.0f,  5.0f,  9.5f},
		loc{16.0f,  5.0f, 10.5f},
		loc{10.0f,  6.0f,  5.0f},
		loc{11.0f,  6.0f,  6.0f},
		loc{12.0f,  6.0f,  7.0f},
		loc{13.0f,  6.0f,  8.0f},
		loc{14.0f,  6.0f,  9.0f},
		loc{15.0f,  6.0f, 10.0f},
		loc{16.0f,  6.0f, 11.0f},
		loc{ 9.0f,  7.0f,  4.5f},
		loc{10.0f,  7.0f,  5.5f},
		loc{11.0f,  7.0f,  6.5f},
		loc{12.0f,  7.0f,  7.5f},
		loc{13.0f,  7.0f,  8.5f},
		loc{14.0f,  7.0f,  9.5f},
		loc{15.0f,  7.0f, 10.5f},
		loc{16.0f,  7.0f, 11.5f},
		loc{ 8.0f,  8.0f,  4.0f},
		loc{ 9.0f,  8.0f,  5.0f},
		loc{10.0f,  8.0f,  6.0f},
		loc{11.0f,  8.0f,  7.0f},
		loc{12.0f,  8.0f,  8.0f},
		loc{13.0f,  8.0f,  9.0f},
		loc{14.0f,  8.0f, 10.0f},
		loc{15.0f,  8.0f, 11.0f},
		loc{16.0f,  8.0f, 12.0f},
		loc{ 7.0f,  9.0f,  3.5f},
		loc{ 8.0f,  9.0f,  4.5f},
		loc{ 9.0f,  9.0f,  5.5f},
		loc{10.0f,  9.0f,  6.5f},
		loc{11.0f,  9.0f,  7.5f},
		loc{12.0f,  9.0f,  8.5f},
		loc{13.0f,  9.0f,  9.5f},
		loc{14.0f,  9.0f, 10.5f},
		loc{15.0f,  9.0f, 11.5f},
		loc{16.0f,  9.0f, 12.5f},
		loc{ 6.0f, 10.0f,  3.0f},
		loc{ 7.0f, 10.0f,  4.0f},
		loc{ 8.0f, 10.0f,  5.0f},
		loc{ 9.0f, 10.0f,  6.0f},
		loc{10.0f, 10.0f,  7.0f},
		loc{11.0f, 10.0f,  8.0f},
		loc{12.0f, 10.0f,  9.0f},
		loc{13.0f, 10.0f, 10.0f},
		loc{14.0f, 10.0f, 11.0f},
		loc{15.0f, 10.0f, 12.0f},
		loc{16.0f, 10.0f, 13.0f},
		loc{ 5.0f, 11.0f,  2.5f},
		loc{ 6.0f, 11.0f,  3.5f},
		loc{ 7.0f, 11.0f,  4.5f},
		loc{ 8.0f, 11.0f,  5.5f},
		loc{ 9.0f, 11.0f,  6.5f},
		loc{10.0f, 11.0f,  7.5f},
		loc{11.0f, 11.0f,  8.5f},
		loc{12.0f, 11.0f,  9.5f},
		loc{13.0f, 11.0f, 10.5f},
		loc{14.0f, 11.0f, 11.5f},
		loc{15.0f, 11.0f, 12.5f},
		loc{16.0f, 11.0f, 13.5f},
		loc{ 4.0f, 12.0f,  2.0f},
		loc{ 5.0f, 12.0f,  3.0f},
		loc{ 6.0f, 12.0f,  4.0f},
		loc{ 7.0f, 12.0f,  5.0f},
		loc{ 8.0f, 12.0f,  6.0f},
		loc{ 9.0f, 12.0f,  7.0f},
		loc{10.0f, 12.0f,  8.0f},
		loc{11.0f, 12.0f,  9.0f},
		loc{12.0f, 12.0f, 10.0f},
		loc{13.0f, 12.0f, 11.0f},
		loc{14.0f, 12.0f, 12.0f},
		loc{15.0f, 12.0f, 13.0f},
		loc{16.0f, 12.0f, 14.0f},
		loc{ 3.0f, 13.0f,  1.5f},
		loc{ 4.0f, 13.0f,  2.5f},
		loc{ 5.0f, 13.0f,  3.5f},
		loc{ 6.0f, 13.0f,  4.5f},
		loc{ 7.0f, 13.0f,  5.5f},
		loc{ 8.0f, 13.0f,  6.5f},
		loc{ 9.0f, 13.0f,  7.5f},
		loc{10.0f, 13.0f,  8.5f},
		loc{11.0f, 13.0f,  9.5f},
		loc{12.0f, 13.0f, 10.5f},
		loc{13.0f, 13.0f, 11.5f},
		loc{14.0f, 13.0f, 12.5f},
		loc{15.0f, 13.0f, 13.5f},
		loc{16.0f, 13.0f, 14.5f},
		loc{ 2.0f, 14.0f,  1.0f},
		loc{ 3.0f, 14.0f,  2.0f},
		loc{ 4.0f, 14.0f,  3.0f},
		loc{ 5.0f, 14.0f,  4.0f},
		loc{ 6.0f, 14.0f,  5.0f},
		loc{ 7.0f, 14.0f,  6.0f},
		loc{ 8.0f, 14.0f,  7.0f},
		loc{ 9.0f, 14.0f,  8.0f},
		loc{10.0f, 14.0f,  9.0f},
		loc{11.0f, 14.0f, 10.0f},
		loc{12.0f, 14.0f, 11.0f},
		loc{13.0f, 14.0f, 12.0f},
		loc{14.0f, 14.0f, 13.0f},
		loc{15.0f, 14.0f, 14.0f},
		loc{16.0f, 14.0f, 15.0f},
		loc{ 1.0f, 15.0f,  0.5f},
		loc{ 2.0f, 15.0f,  1.5f},
		loc{ 3.0f, 15.0f,  2.5f},
		loc{ 4.0f, 15.0f,  3.5f},
		loc{ 5.0f, 15.0f,  4.5f},
		loc{ 6.0f, 15.0f,  5.5f},
		loc{ 7.0f, 15.0f,  6.5f},
		loc{ 8.0f, 15.0f,  7.5f},
		loc{ 9.0f, 15.0f,  8.5f},
		loc{10.0f, 15.0f,  9.5f},
		loc{11.0f, 15.0f, 10.5f},
		loc{12.0f, 15.0f, 11.5f},
		loc{13.0f, 15.0f, 12.5f},
		loc{14.0f, 15.0f, 13.5f},
		loc{15.0f, 15.0f, 14.5f},
		loc{16.0f, 15.0f, 15.5f},
		loc{ 0.0f, 16.0f, -0.0f},
		loc{ 1.0f, 16.0f,  1.0f},
		loc{ 2.0f, 16.0f,  2.0f},
		loc{ 3.0f, 16.0f,  3.0f},
		loc{ 4.0f, 16.0f,  4.0f},
		loc{ 5.0f, 16.0f,  5.0f},
		loc{ 6.0f, 16.0f,  6.0f},
		loc{ 7.0f, 16.0f,  7.0f},
		loc{ 8.0f, 16.0f,  8.0f},
		loc{ 9.0f, 16.0f,  9.0f},
		loc{10.0f, 16.0f, 10.0f},
		loc{11.0f, 16.0f, 11.0f},
		loc{12.0f, 16.0f, 12.0f},
		loc{13.0f, 16.0f, 13.0f},
		loc{14.0f, 16.0f, 14.0f},
		loc{15.0f, 16.0f, 15.0f},
		loc{16.0f, 16.0f, 16.0f}
	};

	project_from_above(T, [index = 0, &points](loc p) mutable {
		EXPECT_EQ(p, points[index]);
		++index;
	});
}


TESTCASE(geosimd_triangle_project_from_above_corner_top)
{
	using loc = geosimd::euclidian_space<float, 3>::location;
	using vec = geosimd::euclidian_space<float, 3>::displacement;

	auto const origin = loc{0.0f, 0.0f, 0.0f};

	geosimd::triangle T{
		origin + 16.0f*vec{0.0f, 0.0f, 0.0f},
		origin + 16.0f*vec{1.0f, 0.0f, 1.0f},
		origin + 16.0f*vec{1.0f, 1.0f, 0.5f},
	};

	std::array<loc, 153> points{
		loc{0.0f, 0.0f, -0.0f},
		loc{1.0f, 0.0f, 1.0f},
		loc{2.0f, 0.0f, 2.0f},
		loc{3.0f, 0.0f, 3.0f},
		loc{4.0f, 0.0f, 4.0f},
		loc{5.0f, 0.0f, 5.0f},
		loc{6.0f, 0.0f, 6.0f},
		loc{7.0f, 0.0f, 7.0f},
		loc{8.0f, 0.0f, 8.0f},
		loc{9.0f, 0.0f, 9.0f},
		loc{10.0f, 0.0f, 10.0f},
		loc{11.0f, 0.0f, 11.0f},
		loc{12.0f, 0.0f, 12.0f},
		loc{13.0f, 0.0f, 13.0f},
		loc{14.0f, 0.0f, 14.0f},
		loc{15.0f, 0.0f, 15.0f},
		loc{16.0f, 0.0f, 16.0f},
		loc{1.0f, 1.0f, 0.5f},
		loc{2.0f, 1.0f, 1.5f},
		loc{3.0f, 1.0f, 2.5f},
		loc{4.0f, 1.0f, 3.5f},
		loc{5.0f, 1.0f, 4.5f},
		loc{6.0f, 1.0f, 5.5f},
		loc{7.0f, 1.0f, 6.5f},
		loc{8.0f, 1.0f, 7.5f},
		loc{9.0f, 1.0f, 8.5f},
		loc{10.0f, 1.0f, 9.5f},
		loc{11.0f, 1.0f, 10.5f},
		loc{12.0f, 1.0f, 11.5f},
		loc{13.0f, 1.0f, 12.5f},
		loc{14.0f, 1.0f, 13.5f},
		loc{15.0f, 1.0f, 14.5f},
		loc{16.0f, 1.0f, 15.5f},
		loc{2.0f, 2.0f, 1.0f},
		loc{3.0f, 2.0f, 2.0f},
		loc{4.0f, 2.0f, 3.0f},
		loc{5.0f, 2.0f, 4.0f},
		loc{6.0f, 2.0f, 5.0f},
		loc{7.0f, 2.0f, 6.0f},
		loc{8.0f, 2.0f, 7.0f},
		loc{9.0f, 2.0f, 8.0f},
		loc{10.0f, 2.0f, 9.0f},
		loc{11.0f, 2.0f, 10.0f},
		loc{12.0f, 2.0f, 11.0f},
		loc{13.0f, 2.0f, 12.0f},
		loc{14.0f, 2.0f, 13.0f},
		loc{15.0f, 2.0f, 14.0f},
		loc{16.0f, 2.0f, 15.0f},
		loc{3.0f, 3.0f, 1.5f},
		loc{4.0f, 3.0f, 2.5f},
		loc{5.0f, 3.0f, 3.5f},
		loc{6.0f, 3.0f, 4.5f},
		loc{7.0f, 3.0f, 5.5f},
		loc{8.0f, 3.0f, 6.5f},
		loc{9.0f, 3.0f, 7.5f},
		loc{10.0f, 3.0f, 8.5f},
		loc{11.0f, 3.0f, 9.5f},
		loc{12.0f, 3.0f, 10.5f},
		loc{13.0f, 3.0f, 11.5f},
		loc{14.0f, 3.0f, 12.5f},
		loc{15.0f, 3.0f, 13.5f},
		loc{16.0f, 3.0f, 14.5f},
		loc{4.0f, 4.0f, 2.0f},
		loc{5.0f, 4.0f, 3.0f},
		loc{6.0f, 4.0f, 4.0f},
		loc{7.0f, 4.0f, 5.0f},
		loc{8.0f, 4.0f, 6.0f},
		loc{9.0f, 4.0f, 7.0f},
		loc{10.0f, 4.0f, 8.0f},
		loc{11.0f, 4.0f, 9.0f},
		loc{12.0f, 4.0f, 10.0f},
		loc{13.0f, 4.0f, 11.0f},
		loc{14.0f, 4.0f, 12.0f},
		loc{15.0f, 4.0f, 13.0f},
		loc{16.0f, 4.0f, 14.0f},
		loc{5.0f, 5.0f, 2.5f},
		loc{6.0f, 5.0f, 3.5f},
		loc{7.0f, 5.0f, 4.5f},
		loc{8.0f, 5.0f, 5.5f},
		loc{9.0f, 5.0f, 6.5f},
		loc{10.0f, 5.0f, 7.5f},
		loc{11.0f, 5.0f, 8.5f},
		loc{12.0f, 5.0f, 9.5f},
		loc{13.0f, 5.0f, 10.5f},
		loc{14.0f, 5.0f, 11.5f},
		loc{15.0f, 5.0f, 12.5f},
		loc{16.0f, 5.0f, 13.5f},
		loc{6.0f, 6.0f, 3.0f},
		loc{7.0f, 6.0f, 4.0f},
		loc{8.0f, 6.0f, 5.0f},
		loc{9.0f, 6.0f, 6.0f},
		loc{10.0f, 6.0f, 7.0f},
		loc{11.0f, 6.0f, 8.0f},
		loc{12.0f, 6.0f, 9.0f},
		loc{13.0f, 6.0f, 10.0f},
		loc{14.0f, 6.0f, 11.0f},
		loc{15.0f, 6.0f, 12.0f},
		loc{16.0f, 6.0f, 13.0f},
		loc{7.0f, 7.0f, 3.5f},
		loc{8.0f, 7.0f, 4.5f},
		loc{9.0f, 7.0f, 5.5f},
		loc{10.0f, 7.0f, 6.5f},
		loc{11.0f, 7.0f, 7.5f},
		loc{12.0f, 7.0f, 8.5f},
		loc{13.0f, 7.0f, 9.5f},
		loc{14.0f, 7.0f, 10.5f},
		loc{15.0f, 7.0f, 11.5f},
		loc{16.0f, 7.0f, 12.5f},
		loc{8.0f, 8.0f, 4.0f},
		loc{9.0f, 8.0f, 5.0f},
		loc{10.0f, 8.0f, 6.0f},
		loc{11.0f, 8.0f, 7.0f},
		loc{12.0f, 8.0f, 8.0f},
		loc{13.0f, 8.0f, 9.0f},
		loc{14.0f, 8.0f, 10.0f},
		loc{15.0f, 8.0f, 11.0f},
		loc{16.0f, 8.0f, 12.0f},
		loc{9.0f, 9.0f, 4.5f},
		loc{10.0f, 9.0f, 5.5f},
		loc{11.0f, 9.0f, 6.5f},
		loc{12.0f, 9.0f, 7.5f},
		loc{13.0f, 9.0f, 8.5f},
		loc{14.0f, 9.0f, 9.5f},
		loc{15.0f, 9.0f, 10.5f},
		loc{16.0f, 9.0f, 11.5f},
		loc{10.0f, 10.0f, 5.0f},
		loc{11.0f, 10.0f, 6.0f},
		loc{12.0f, 10.0f, 7.0f},
		loc{13.0f, 10.0f, 8.0f},
		loc{14.0f, 10.0f, 9.0f},
		loc{15.0f, 10.0f, 10.0f},
		loc{16.0f, 10.0f, 11.0f},
		loc{11.0f, 11.0f, 5.5f},
		loc{12.0f, 11.0f, 6.5f},
		loc{13.0f, 11.0f, 7.5f},
		loc{14.0f, 11.0f, 8.5f},
		loc{15.0f, 11.0f, 9.5f},
		loc{16.0f, 11.0f, 10.5f},
		loc{12.0f, 12.0f, 6.0f},
		loc{13.0f, 12.0f, 7.0f},
		loc{14.0f, 12.0f, 8.0f},
		loc{15.0f, 12.0f, 9.0f},
		loc{16.0f, 12.0f, 10.0f},
		loc{13.0f, 13.0f, 6.5f},
		loc{14.0f, 13.0f, 7.5f},
		loc{15.0f, 13.0f, 8.5f},
		loc{16.0f, 13.0f, 9.5f},
		loc{14.0f, 14.0f, 7.0f},
		loc{15.0f, 14.0f, 8.0f},
		loc{16.0f, 14.0f, 9.0f},
		loc{15.0f, 15.0f, 7.5f},
		loc{16.0f, 15.0f, 8.5f},
		loc{16.0f, 16.0f, 8.0f}
	};

	project_from_above(T, [index = 0, &points](loc p) mutable {
		EXPECT_EQ(p, points[index]);
		++index;
	});
}

TESTCASE(geosimd_triangle_project_from_above_corner_right)
{
	using loc = geosimd::euclidian_space<float, 3>::location;
	using vec = geosimd::euclidian_space<float, 3>::displacement;

	auto const origin = loc{0.0f, 0.0f, 0.0f};

	geosimd::triangle T{
		origin + 16.0f*vec{0.0f, 0.0f, 0.0f},
		origin + 16.0f*vec{1.0f, 0.5f, 1.0f},
		origin + 16.0f*vec{0.0f, 1.0f, 0.5f},
	};
	std::array<loc, 145> points{
		loc{0.0f, 0.0f, 0.0f},
		loc{0.0f, 1.0f, 0.5f},
		loc{1.0f, 1.0f, 1.25f},
		loc{2.0f, 1.0f, 2.0f},
		loc{0.0f, 2.0f, 1.0f},
		loc{1.0f, 2.0f, 1.75f},
		loc{2.0f, 2.0f, 2.5f},
		loc{3.0f, 2.0f, 3.25f},
		loc{4.0f, 2.0f, 4.0f},
		loc{0.0f, 3.0f, 1.5f},
		loc{1.0f, 3.0f, 2.25f},
		loc{2.0f, 3.0f, 3.0f},
		loc{3.0f, 3.0f, 3.75f},
		loc{4.0f, 3.0f, 4.5f},
		loc{5.0f, 3.0f, 5.25f},
		loc{6.0f, 3.0f, 6.0f},
		loc{0.0f, 4.0f, 2.0f},
		loc{1.0f, 4.0f, 2.75f},
		loc{2.0f, 4.0f, 3.5f},
		loc{3.0f, 4.0f, 4.25f},
		loc{4.0f, 4.0f, 5.0f},
		loc{5.0f, 4.0f, 5.75f},
		loc{6.0f, 4.0f, 6.5f},
		loc{7.0f, 4.0f, 7.25f},
		loc{8.0f, 4.0f, 8.0f},
		loc{0.0f, 5.0f, 2.5f},
		loc{1.0f, 5.0f, 3.25f},
		loc{2.0f, 5.0f, 4.0f},
		loc{3.0f, 5.0f, 4.75f},
		loc{4.0f, 5.0f, 5.5f},
		loc{5.0f, 5.0f, 6.25f},
		loc{6.0f, 5.0f, 7.0f},
		loc{7.0f, 5.0f, 7.75f},
		loc{8.0f, 5.0f, 8.5f},
		loc{9.0f, 5.0f, 9.25f},
		loc{10.0f, 5.0f, 10.0f},
		loc{0.0f, 6.0f, 3.0f},
		loc{1.0f, 6.0f, 3.75f},
		loc{2.0f, 6.0f, 4.5f},
		loc{3.0f, 6.0f, 5.25f},
		loc{4.0f, 6.0f, 6.0f},
		loc{5.0f, 6.0f, 6.75f},
		loc{6.0f, 6.0f, 7.5f},
		loc{7.0f, 6.0f, 8.25f},
		loc{8.0f, 6.0f, 9.0f},
		loc{9.0f, 6.0f, 9.75f},
		loc{10.0f, 6.0f, 10.5f},
		loc{11.0f, 6.0f, 11.25f},
		loc{12.0f, 6.0f, 12.0f},
		loc{0.0f, 7.0f, 3.5f},
		loc{1.0f, 7.0f, 4.25f},
		loc{2.0f, 7.0f, 5.0f},
		loc{3.0f, 7.0f, 5.75f},
		loc{4.0f, 7.0f, 6.5f},
		loc{5.0f, 7.0f, 7.25f},
		loc{6.0f, 7.0f, 8.0f},
		loc{7.0f, 7.0f, 8.75f},
		loc{8.0f, 7.0f, 9.5f},
		loc{9.0f, 7.0f, 10.25f},
		loc{10.0f, 7.0f, 11.0f},
		loc{11.0f, 7.0f, 11.75f},
		loc{12.0f, 7.0f, 12.5f},
		loc{13.0f, 7.0f, 13.25f},
		loc{14.0f, 7.0f, 14.0f},
		loc{0.0f, 8.0f, 4.0f},
		loc{1.0f, 8.0f, 4.75f},
		loc{2.0f, 8.0f, 5.5f},
		loc{3.0f, 8.0f, 6.25f},
		loc{4.0f, 8.0f, 7.0f},
		loc{5.0f, 8.0f, 7.75f},
		loc{6.0f, 8.0f, 8.5f},
		loc{7.0f, 8.0f, 9.25f},
		loc{8.0f, 8.0f, 10.0f},
		loc{9.0f, 8.0f, 10.75f},
		loc{10.0f, 8.0f, 11.5f},
		loc{11.0f, 8.0f, 12.25f},
		loc{12.0f, 8.0f, 13.0f},
		loc{13.0f, 8.0f, 13.75f},
		loc{14.0f, 8.0f, 14.5f},
		loc{15.0f, 8.0f, 15.25f},
		loc{16.0f, 8.0f, 16.0f},
		loc{0.0f, 9.0f, 4.5f},
		loc{1.0f, 9.0f, 5.25f},
		loc{2.0f, 9.0f, 6.0f},
		loc{3.0f, 9.0f, 6.75f},
		loc{4.0f, 9.0f, 7.5f},
		loc{5.0f, 9.0f, 8.25f},
		loc{6.0f, 9.0f, 9.0f},
		loc{7.0f, 9.0f, 9.75f},
		loc{8.0f, 9.0f, 10.5f},
		loc{9.0f, 9.0f, 11.25f},
		loc{10.0f, 9.0f, 12.0f},
		loc{11.0f, 9.0f, 12.75f},
		loc{12.0f, 9.0f, 13.5f},
		loc{13.0f, 9.0f, 14.25f},
		loc{14.0f, 9.0f, 15.0f},
		loc{0.0f, 10.0f, 5.0f},
		loc{1.0f, 10.0f, 5.75f},
		loc{2.0f, 10.0f, 6.5f},
		loc{3.0f, 10.0f, 7.25f},
		loc{4.0f, 10.0f, 8.0f},
		loc{5.0f, 10.0f, 8.75f},
		loc{6.0f, 10.0f, 9.5f},
		loc{7.0f, 10.0f, 10.25f},
		loc{8.0f, 10.0f, 11.0f},
		loc{9.0f, 10.0f, 11.75f},
		loc{10.0f, 10.0f, 12.5f},
		loc{11.0f, 10.0f, 13.25f},
		loc{12.0f, 10.0f, 14.0f},
		loc{0.0f, 11.0f, 5.5f},
		loc{1.0f, 11.0f, 6.25f},
		loc{2.0f, 11.0f, 7.0f},
		loc{3.0f, 11.0f, 7.75f},
		loc{4.0f, 11.0f, 8.5f},
		loc{5.0f, 11.0f, 9.25f},
		loc{6.0f, 11.0f, 10.0f},
		loc{7.0f, 11.0f, 10.75f},
		loc{8.0f, 11.0f, 11.5f},
		loc{9.0f, 11.0f, 12.25f},
		loc{10.0f, 11.0f, 13.0f},
		loc{0.0f, 12.0f, 6.0f},
		loc{1.0f, 12.0f, 6.75f},
		loc{2.0f, 12.0f, 7.5f},
		loc{3.0f, 12.0f, 8.25f},
		loc{4.0f, 12.0f, 9.0f},
		loc{5.0f, 12.0f, 9.75f},
		loc{6.0f, 12.0f, 10.5f},
		loc{7.0f, 12.0f, 11.25f},
		loc{8.0f, 12.0f, 12.0f},
		loc{0.0f, 13.0f, 6.5f},
		loc{1.0f, 13.0f, 7.25f},
		loc{2.0f, 13.0f, 8.0f},
		loc{3.0f, 13.0f, 8.75f},
		loc{4.0f, 13.0f, 9.5f},
		loc{5.0f, 13.0f, 10.25f},
		loc{6.0f, 13.0f, 11.0f},
		loc{0.0f, 14.0f, 7.0f},
		loc{1.0f, 14.0f, 7.75f},
		loc{2.0f, 14.0f, 8.5f},
		loc{3.0f, 14.0f, 9.25f},
		loc{4.0f, 14.0f, 10.0f},
		loc{0.0f, 15.0f, 7.5f},
		loc{1.0f, 15.0f, 8.25f},
		loc{2.0f, 15.0f, 9.0f},
		loc{.0f, 16.0f, 8.0f}
	};

	project_from_above(T, [index = 0, &points](loc p) mutable {
		EXPECT_EQ(p, points[index]);
	//	printf("%s\n", to_string(p).c_str());
		++index;
	});
}