//@	{"target":{"name":"triangle.test"}}

#include "./triangle.hpp"

#include "./euclidian_space.hpp"

#include "testfwk/testfwk.hpp"

#include <array>
#include <map>

#if 0
TESTCASE(geosimd_triangle_project_from_above)
{
	using loc = geosimd::euclidian_space<float, 3>::location;
	using vec = geosimd::euclidian_space<float, 3>::displacement;

	auto const origin = loc{1.0f, 2.0f, 4.0f};

	geosimd::triangle T{
		origin + 16.0f*vec{0.0f, 0.25f, 0.0f},
		origin + 16.0f*vec{2.0f, 0.0f, 0.0f},
		origin + 16.0f*vec{1.5f, 1.0f, 1.0f}
	};

	std::array<loc, 253> const expected_points{
		loc{3.30000000e+01f, 2.00000000e+00f, 4.00000000e+00f},
		loc{2.50000000e+01f, 3.00000000e+00f, 4.00000000e+00f},
		loc{2.60000000e+01f, 3.00000000e+00f, 4.13333321e+00f},
		loc{2.70000000e+01f, 3.00000000e+00f, 4.26666689e+00f},
		loc{2.80000000e+01f, 3.00000000e+00f, 4.40000010e+00f},
		loc{2.90000000e+01f, 3.00000000e+00f, 4.53333330e+00f},
		loc{3.00000000e+01f, 3.00000000e+00f, 4.66666651e+00f},
		loc{3.10000000e+01f, 3.00000000e+00f, 4.80000019e+00f},
		loc{3.20000000e+01f, 3.00000000e+00f, 4.93333340e+00f},
		loc{1.70000000e+01f, 4.00000000e+00f, 4.00000000e+00f},
		loc{1.80000000e+01f, 4.00000000e+00f, 4.13333321e+00f},
		loc{1.90000000e+01f, 4.00000000e+00f, 4.26666689e+00f},
		loc{2.00000000e+01f, 4.00000000e+00f, 4.40000010e+00f},
		loc{2.10000000e+01f, 4.00000000e+00f, 4.53333330e+00f},
		loc{2.20000000e+01f, 4.00000000e+00f, 4.66666651e+00f},
		loc{2.30000000e+01f, 4.00000000e+00f, 4.80000019e+00f},
		loc{2.40000000e+01f, 4.00000000e+00f, 4.93333340e+00f},
		loc{2.50000000e+01f, 4.00000000e+00f, 5.06666660e+00f},
		loc{2.60000000e+01f, 4.00000000e+00f, 5.19999981e+00f},
		loc{2.70000000e+01f, 4.00000000e+00f, 5.33333349e+00f},
		loc{2.80000000e+01f, 4.00000000e+00f, 5.46666670e+00f},
		loc{2.90000000e+01f, 4.00000000e+00f, 5.59999990e+00f},
		loc{3.00000000e+01f, 4.00000000e+00f, 5.73333311e+00f},
		loc{3.10000000e+01f, 4.00000000e+00f, 5.86666679e+00f},
		loc{3.20000000e+01f, 4.00000000e+00f, 6.00000000e+00f},
		loc{9.00000000e+00f, 5.00000000e+00f, 4.00000000e+00f},
		loc{1.00000000e+01f, 5.00000000e+00f, 4.13333321e+00f},
		loc{1.10000000e+01f, 5.00000000e+00f, 4.26666689e+00f},
		loc{1.20000000e+01f, 5.00000000e+00f, 4.40000010e+00f},
		loc{1.30000000e+01f, 5.00000000e+00f, 4.53333330e+00f},
		loc{1.40000000e+01f, 5.00000000e+00f, 4.66666651e+00f},
		loc{1.50000000e+01f, 5.00000000e+00f, 4.80000019e+00f},
		loc{1.60000000e+01f, 5.00000000e+00f, 4.93333340e+00f},
		loc{1.70000000e+01f, 5.00000000e+00f, 5.06666660e+00f},
		loc{1.80000000e+01f, 5.00000000e+00f, 5.19999981e+00f},
		loc{1.90000000e+01f, 5.00000000e+00f, 5.33333349e+00f},
		loc{2.00000000e+01f, 5.00000000e+00f, 5.46666670e+00f},
		loc{2.10000000e+01f, 5.00000000e+00f, 5.59999990e+00f},
		loc{2.20000000e+01f, 5.00000000e+00f, 5.73333311e+00f},
		loc{2.30000000e+01f, 5.00000000e+00f, 5.86666679e+00f},
		loc{2.40000000e+01f, 5.00000000e+00f, 6.00000000e+00f},
		loc{2.50000000e+01f, 5.00000000e+00f, 6.13333321e+00f},
		loc{2.60000000e+01f, 5.00000000e+00f, 6.26666689e+00f},
		loc{2.70000000e+01f, 5.00000000e+00f, 6.40000010e+00f},
		loc{2.80000000e+01f, 5.00000000e+00f, 6.53333330e+00f},
		loc{2.90000000e+01f, 5.00000000e+00f, 6.66666651e+00f},
		loc{3.00000000e+01f, 5.00000000e+00f, 6.80000019e+00f},
		loc{3.10000000e+01f, 5.00000000e+00f, 6.93333340e+00f},
		loc{1.00000000e+00f, 6.00000000e+00f, 4.00000000e+00f},
		loc{2.00000000e+00f, 6.00000000e+00f, 4.13333321e+00f},
		loc{3.00000000e+00f, 6.00000000e+00f, 4.26666689e+00f},
		loc{4.00000000e+00f, 6.00000000e+00f, 4.40000010e+00f},
		loc{5.00000000e+00f, 6.00000000e+00f, 4.53333330e+00f},
		loc{6.00000000e+00f, 6.00000000e+00f, 4.66666651e+00f},
		loc{7.00000000e+00f, 6.00000000e+00f, 4.80000019e+00f},
		loc{8.00000000e+00f, 6.00000000e+00f, 4.93333340e+00f},
		loc{9.00000000e+00f, 6.00000000e+00f, 5.06666660e+00f},
		loc{1.00000000e+01f, 6.00000000e+00f, 5.19999981e+00f},
		loc{1.10000000e+01f, 6.00000000e+00f, 5.33333349e+00f},
		loc{1.20000000e+01f, 6.00000000e+00f, 5.46666670e+00f},
		loc{1.30000000e+01f, 6.00000000e+00f, 5.59999990e+00f},
		loc{1.40000000e+01f, 6.00000000e+00f, 5.73333311e+00f},
		loc{1.50000000e+01f, 6.00000000e+00f, 5.86666679e+00f},
		loc{1.60000000e+01f, 6.00000000e+00f, 6.00000000e+00f},
		loc{1.70000000e+01f, 6.00000000e+00f, 6.13333321e+00f},
		loc{1.80000000e+01f, 6.00000000e+00f, 6.26666689e+00f},
		loc{1.90000000e+01f, 6.00000000e+00f, 6.40000010e+00f},
		loc{2.00000000e+01f, 6.00000000e+00f, 6.53333330e+00f},
		loc{2.10000000e+01f, 6.00000000e+00f, 6.66666651e+00f},
		loc{2.20000000e+01f, 6.00000000e+00f, 6.80000019e+00f},
		loc{2.30000000e+01f, 6.00000000e+00f, 6.93333340e+00f},
		loc{2.40000000e+01f, 6.00000000e+00f, 7.06666660e+00f},
		loc{2.50000000e+01f, 6.00000000e+00f, 7.19999981e+00f},
		loc{2.60000000e+01f, 6.00000000e+00f, 7.33333349e+00f},
		loc{2.70000000e+01f, 6.00000000e+00f, 7.46666670e+00f},
		loc{2.80000000e+01f, 6.00000000e+00f, 7.59999990e+00f},
		loc{2.90000000e+01f, 6.00000000e+00f, 7.73333311e+00f},
		loc{3.00000000e+01f, 6.00000000e+00f, 7.86666679e+00f},
		loc{3.10000000e+01f, 6.00000000e+00f, 8.00000000e+00f},
		loc{3.00000000e+00f, 7.00000000e+00f, 5.33333349e+00f},
		loc{4.00000000e+00f, 7.00000000e+00f, 5.46666670e+00f},
		loc{5.00000000e+00f, 7.00000000e+00f, 5.59999990e+00f},
		loc{6.00000000e+00f, 7.00000000e+00f, 5.73333311e+00f},
		loc{7.00000000e+00f, 7.00000000e+00f, 5.86666679e+00f},
		loc{8.00000000e+00f, 7.00000000e+00f, 6.00000000e+00f},
		loc{9.00000000e+00f, 7.00000000e+00f, 6.13333321e+00f},
		loc{1.00000000e+01f, 7.00000000e+00f, 6.26666689e+00f},
		loc{1.10000000e+01f, 7.00000000e+00f, 6.40000010e+00f},
		loc{1.20000000e+01f, 7.00000000e+00f, 6.53333330e+00f},
		loc{1.30000000e+01f, 7.00000000e+00f, 6.66666651e+00f},
		loc{1.40000000e+01f, 7.00000000e+00f, 6.80000019e+00f},
		loc{1.50000000e+01f, 7.00000000e+00f, 6.93333340e+00f},
		loc{1.60000000e+01f, 7.00000000e+00f, 7.06666660e+00f},
		loc{1.70000000e+01f, 7.00000000e+00f, 7.19999981e+00f},
		loc{1.80000000e+01f, 7.00000000e+00f, 7.33333349e+00f},
		loc{1.90000000e+01f, 7.00000000e+00f, 7.46666670e+00f},
		loc{2.00000000e+01f, 7.00000000e+00f, 7.59999990e+00f},
		loc{2.10000000e+01f, 7.00000000e+00f, 7.73333311e+00f},
		loc{2.20000000e+01f, 7.00000000e+00f, 7.86666679e+00f},
		loc{2.30000000e+01f, 7.00000000e+00f, 8.00000000e+00f},
		loc{2.40000000e+01f, 7.00000000e+00f, 8.13333321e+00f},
		loc{2.50000000e+01f, 7.00000000e+00f, 8.26666641e+00f},
		loc{2.60000000e+01f, 7.00000000e+00f, 8.39999962e+00f},
		loc{2.70000000e+01f, 7.00000000e+00f, 8.53333378e+00f},
		loc{2.80000000e+01f, 7.00000000e+00f, 8.66666698e+00f},
		loc{2.90000000e+01f, 7.00000000e+00f, 8.80000019e+00f},
		loc{3.00000000e+01f, 7.00000000e+00f, 8.93333340e+00f},
		loc{5.00000000e+00f, 8.00000000e+00f, 6.66666651e+00f},
		loc{6.00000000e+00f, 8.00000000e+00f, 6.80000019e+00f},
		loc{7.00000000e+00f, 8.00000000e+00f, 6.93333340e+00f},
		loc{8.00000000e+00f, 8.00000000e+00f, 7.06666660e+00f},
		loc{9.00000000e+00f, 8.00000000e+00f, 7.19999981e+00f},
		loc{1.00000000e+01f, 8.00000000e+00f, 7.33333349e+00f},
		loc{1.10000000e+01f, 8.00000000e+00f, 7.46666670e+00f},
		loc{1.20000000e+01f, 8.00000000e+00f, 7.59999990e+00f},
		loc{1.30000000e+01f, 8.00000000e+00f, 7.73333311e+00f},
		loc{1.40000000e+01f, 8.00000000e+00f, 7.86666679e+00f},
		loc{1.50000000e+01f, 8.00000000e+00f, 8.00000000e+00f},
		loc{1.60000000e+01f, 8.00000000e+00f, 8.13333321e+00f},
		loc{1.70000000e+01f, 8.00000000e+00f, 8.26666641e+00f},
		loc{1.80000000e+01f, 8.00000000e+00f, 8.39999962e+00f},
		loc{1.90000000e+01f, 8.00000000e+00f, 8.53333378e+00f},
		loc{2.00000000e+01f, 8.00000000e+00f, 8.66666698e+00f},
		loc{2.10000000e+01f, 8.00000000e+00f, 8.80000019e+00f},
		loc{2.20000000e+01f, 8.00000000e+00f, 8.93333340e+00f},
		loc{2.30000000e+01f, 8.00000000e+00f, 9.06666660e+00f},
		loc{2.40000000e+01f, 8.00000000e+00f, 9.19999981e+00f},
		loc{2.50000000e+01f, 8.00000000e+00f, 9.33333302e+00f},
		loc{2.60000000e+01f, 8.00000000e+00f, 9.46666622e+00f},
		loc{2.70000000e+01f, 8.00000000e+00f, 9.60000038e+00f},
		loc{2.80000000e+01f, 8.00000000e+00f, 9.73333359e+00f},
		loc{2.90000000e+01f, 8.00000000e+00f, 9.86666679e+00f},
		loc{3.00000000e+01f, 8.00000000e+00f, 1.00000000e+01f},
		loc{7.00000000e+00f, 9.00000000e+00f, 8.00000000e+00f},
		loc{8.00000000e+00f, 9.00000000e+00f, 8.13333321e+00f},
		loc{9.00000000e+00f, 9.00000000e+00f, 8.26666641e+00f},
		loc{1.00000000e+01f, 9.00000000e+00f, 8.39999962e+00f},
		loc{1.10000000e+01f, 9.00000000e+00f, 8.53333378e+00f},
		loc{1.20000000e+01f, 9.00000000e+00f, 8.66666698e+00f},
		loc{1.30000000e+01f, 9.00000000e+00f, 8.80000019e+00f},
		loc{1.40000000e+01f, 9.00000000e+00f, 8.93333340e+00f},
		loc{1.50000000e+01f, 9.00000000e+00f, 9.06666660e+00f},
		loc{1.60000000e+01f, 9.00000000e+00f, 9.19999981e+00f},
		loc{1.70000000e+01f, 9.00000000e+00f, 9.33333302e+00f},
		loc{1.80000000e+01f, 9.00000000e+00f, 9.46666622e+00f},
		loc{1.90000000e+01f, 9.00000000e+00f, 9.60000038e+00f},
		loc{2.00000000e+01f, 9.00000000e+00f, 9.73333359e+00f},
		loc{2.10000000e+01f, 9.00000000e+00f, 9.86666679e+00f},
		loc{2.20000000e+01f, 9.00000000e+00f, 1.00000000e+01f},
		loc{2.30000000e+01f, 9.00000000e+00f, 1.01333332e+01f},
		loc{2.40000000e+01f, 9.00000000e+00f, 1.02666664e+01f},
		loc{2.50000000e+01f, 9.00000000e+00f, 1.03999996e+01f},
		loc{2.60000000e+01f, 9.00000000e+00f, 1.05333338e+01f},
		loc{2.70000000e+01f, 9.00000000e+00f, 1.06666670e+01f},
		loc{2.80000000e+01f, 9.00000000e+00f, 1.08000002e+01f},
		loc{2.90000000e+01f, 9.00000000e+00f, 1.09333334e+01f},
		loc{9.00000000e+00f, 1.00000000e+01f, 9.33333302e+00f},
		loc{1.00000000e+01f, 1.00000000e+01f, 9.46666622e+00f},
		loc{1.10000000e+01f, 1.00000000e+01f, 9.60000038e+00f},
		loc{1.20000000e+01f, 1.00000000e+01f, 9.73333359e+00f},
		loc{1.30000000e+01f, 1.00000000e+01f, 9.86666679e+00f},
		loc{1.40000000e+01f, 1.00000000e+01f, 1.00000000e+01f},
		loc{1.50000000e+01f, 1.00000000e+01f, 1.01333332e+01f},
		loc{1.60000000e+01f, 1.00000000e+01f, 1.02666664e+01f},
		loc{1.70000000e+01f, 1.00000000e+01f, 1.03999996e+01f},
		loc{1.80000000e+01f, 1.00000000e+01f, 1.05333338e+01f},
		loc{1.90000000e+01f, 1.00000000e+01f, 1.06666670e+01f},
		loc{2.00000000e+01f, 1.00000000e+01f, 1.08000002e+01f},
		loc{2.10000000e+01f, 1.00000000e+01f, 1.09333334e+01f},
		loc{2.20000000e+01f, 1.00000000e+01f, 1.10666666e+01f},
		loc{2.30000000e+01f, 1.00000000e+01f, 1.11999998e+01f},
		loc{2.40000000e+01f, 1.00000000e+01f, 1.13333330e+01f},
		loc{2.50000000e+01f, 1.00000000e+01f, 1.14666662e+01f},
		loc{2.60000000e+01f, 1.00000000e+01f, 1.16000004e+01f},
		loc{2.70000000e+01f, 1.00000000e+01f, 1.17333336e+01f},
		loc{2.80000000e+01f, 1.00000000e+01f, 1.18666668e+01f},
		loc{2.90000000e+01f, 1.00000000e+01f, 1.20000000e+01f},
		loc{1.10000000e+01f, 1.10000000e+01f, 1.06666670e+01f},
		loc{1.20000000e+01f, 1.10000000e+01f, 1.08000002e+01f},
		loc{1.30000000e+01f, 1.10000000e+01f, 1.09333334e+01f},
		loc{1.40000000e+01f, 1.10000000e+01f, 1.10666666e+01f},
		loc{1.50000000e+01f, 1.10000000e+01f, 1.11999998e+01f},
		loc{1.60000000e+01f, 1.10000000e+01f, 1.13333330e+01f},
		loc{1.70000000e+01f, 1.10000000e+01f, 1.14666662e+01f},
		loc{1.80000000e+01f, 1.10000000e+01f, 1.16000004e+01f},
		loc{1.90000000e+01f, 1.10000000e+01f, 1.17333336e+01f},
		loc{2.00000000e+01f, 1.10000000e+01f, 1.18666668e+01f},
		loc{2.10000000e+01f, 1.10000000e+01f, 1.20000000e+01f},
		loc{2.20000000e+01f, 1.10000000e+01f, 1.21333332e+01f},
		loc{2.30000000e+01f, 1.10000000e+01f, 1.22666664e+01f},
		loc{2.40000000e+01f, 1.10000000e+01f, 1.23999996e+01f},
		loc{2.50000000e+01f, 1.10000000e+01f, 1.25333338e+01f},
		loc{2.60000000e+01f, 1.10000000e+01f, 1.26666670e+01f},
		loc{2.70000000e+01f, 1.10000000e+01f, 1.28000002e+01f},
		loc{2.80000000e+01f, 1.10000000e+01f, 1.29333334e+01f},
		loc{1.30000000e+01f, 1.20000000e+01f, 1.20000000e+01f},
		loc{1.40000000e+01f, 1.20000000e+01f, 1.21333332e+01f},
		loc{1.50000000e+01f, 1.20000000e+01f, 1.22666664e+01f},
		loc{1.60000000e+01f, 1.20000000e+01f, 1.23999996e+01f},
		loc{1.70000000e+01f, 1.20000000e+01f, 1.25333338e+01f},
		loc{1.80000000e+01f, 1.20000000e+01f, 1.26666670e+01f},
		loc{1.90000000e+01f, 1.20000000e+01f, 1.28000002e+01f},
		loc{2.00000000e+01f, 1.20000000e+01f, 1.29333334e+01f},
		loc{2.10000000e+01f, 1.20000000e+01f, 1.30666666e+01f},
		loc{2.20000000e+01f, 1.20000000e+01f, 1.31999998e+01f},
		loc{2.30000000e+01f, 1.20000000e+01f, 1.33333330e+01f},
		loc{2.40000000e+01f, 1.20000000e+01f, 1.34666662e+01f},
		loc{2.50000000e+01f, 1.20000000e+01f, 1.36000004e+01f},
		loc{2.60000000e+01f, 1.20000000e+01f, 1.37333336e+01f},
		loc{2.70000000e+01f, 1.20000000e+01f, 1.38666668e+01f},
		loc{2.80000000e+01f, 1.20000000e+01f, 1.40000000e+01f},
		loc{1.50000000e+01f, 1.30000000e+01f, 1.33333330e+01f},
		loc{1.60000000e+01f, 1.30000000e+01f, 1.34666662e+01f},
		loc{1.70000000e+01f, 1.30000000e+01f, 1.36000004e+01f},
		loc{1.80000000e+01f, 1.30000000e+01f, 1.37333336e+01f},
		loc{1.90000000e+01f, 1.30000000e+01f, 1.38666668e+01f},
		loc{2.00000000e+01f, 1.30000000e+01f, 1.40000000e+01f},
		loc{2.10000000e+01f, 1.30000000e+01f, 1.41333332e+01f},
		loc{2.20000000e+01f, 1.30000000e+01f, 1.42666664e+01f},
		loc{2.30000000e+01f, 1.30000000e+01f, 1.43999996e+01f},
		loc{2.40000000e+01f, 1.30000000e+01f, 1.45333338e+01f},
		loc{2.50000000e+01f, 1.30000000e+01f, 1.46666670e+01f},
		loc{2.60000000e+01f, 1.30000000e+01f, 1.48000002e+01f},
		loc{2.70000000e+01f, 1.30000000e+01f, 1.49333334e+01f},
		loc{1.70000000e+01f, 1.40000000e+01f, 1.46666670e+01f},
		loc{1.80000000e+01f, 1.40000000e+01f, 1.48000002e+01f},
		loc{1.90000000e+01f, 1.40000000e+01f, 1.49333334e+01f},
		loc{2.00000000e+01f, 1.40000000e+01f, 1.50666666e+01f},
		loc{2.10000000e+01f, 1.40000000e+01f, 1.51999998e+01f},
		loc{2.20000000e+01f, 1.40000000e+01f, 1.53333330e+01f},
		loc{2.30000000e+01f, 1.40000000e+01f, 1.54666662e+01f},
		loc{2.40000000e+01f, 1.40000000e+01f, 1.56000004e+01f},
		loc{2.50000000e+01f, 1.40000000e+01f, 1.57333336e+01f},
		loc{2.60000000e+01f, 1.40000000e+01f, 1.58666668e+01f},
		loc{2.70000000e+01f, 1.40000000e+01f, 1.60000000e+01f},
		loc{1.90000000e+01f, 1.50000000e+01f, 1.60000000e+01f},
		loc{2.00000000e+01f, 1.50000000e+01f, 1.61333332e+01f},
		loc{2.10000000e+01f, 1.50000000e+01f, 1.62666664e+01f},
		loc{2.20000000e+01f, 1.50000000e+01f, 1.63999996e+01f},
		loc{2.30000000e+01f, 1.50000000e+01f, 1.65333328e+01f},
		loc{2.40000000e+01f, 1.50000000e+01f, 1.66666660e+01f},
		loc{2.50000000e+01f, 1.50000000e+01f, 1.67999992e+01f},
		loc{2.60000000e+01f, 1.50000000e+01f, 1.69333324e+01f},
		loc{2.10000000e+01f, 1.60000000e+01f, 1.73333340e+01f},
		loc{2.20000000e+01f, 1.60000000e+01f, 1.74666672e+01f},
		loc{2.30000000e+01f, 1.60000000e+01f, 1.76000004e+01f},
		loc{2.40000000e+01f, 1.60000000e+01f, 1.77333336e+01f},
		loc{2.50000000e+01f, 1.60000000e+01f, 1.78666668e+01f},
		loc{2.60000000e+01f, 1.60000000e+01f, 1.80000000e+01f},
		loc{2.30000000e+01f, 1.70000000e+01f, 1.86666660e+01f},
		loc{2.40000000e+01f, 1.70000000e+01f, 1.87999992e+01f},
		loc{2.50000000e+01f, 1.70000000e+01f, 1.89333324e+01f},
		loc{2.50000000e+01f, 1.80000000e+01f, 2.00000000e+01f}
	};

	project_from_above(T, [index = 0, &expected_points](loc p) mutable {
		EXPECT_EQ(p, expected_points[index]);
		++index;
	});
}
#endif

TESTCASE(geosimd_triangle_resolve_from_array)
{
	geosimd::indirect_triangle T_ref{0, 1, 2};

	using loc = geosimd::euclidian_space<float, 3>::location;
	using vec = geosimd::euclidian_space<float, 3>::displacement;

	auto const origin = loc{1.0f, 2.0f, 4.0f};

	std::array<loc, 3> verts{
		origin + 16.0f*vec{0.0f, 0.25f, 0.0f},
		origin + 16.0f*vec{2.0f, 0.0f, 0.0f},
		origin + 16.0f*vec{1.5f, 1.0f, 1.0f}
	};

	auto res = resolve(T_ref, verts);
	EXPECT_EQ(res.p1, verts[0]);
	EXPECT_EQ(res.p2, verts[1]);
	EXPECT_EQ(res.p3, verts[2]);
}

TESTCASE(geosimd_triangle_resolve_from_map)
{
	geosimd::indirect_triangle T_ref{std::string{"A"},
		std::string{"B"},
		std::string{"C"}};

	using loc = geosimd::euclidian_space<float, 3>::location;
	using vec = geosimd::euclidian_space<float, 3>::displacement;

	auto const origin = loc{1.0f, 2.0f, 4.0f};

	std::map<std::string, loc> verts{
		{"A", origin + 16.0f*vec{0.0f, 0.25f, 0.0f}},
		{"B", origin + 16.0f*vec{2.0f, 0.0f, 0.0f}},
		{"C", origin + 16.0f*vec{1.5f, 1.0f, 1.0f}}
	};

	auto res = resolve(T_ref, verts);
	EXPECT_EQ(res.p1, verts["A"]);
	EXPECT_EQ(res.p2, verts["B"]);
	EXPECT_EQ(res.p3, verts["C"]);
}

TESTCASE(geosimd_triangle_project_from_above_corner_bottom)
{
	using loc = geosimd::euclidian_space<float, 3>::location;
	using vec = geosimd::euclidian_space<float, 3>::displacement;

	auto const origin = loc{0.0f, 0.0f, 0.0f};

	geosimd::triangle T{
		origin + 16.0f*vec{0.0f, 1.0f, 0.0f},
		origin + 16.0f*vec{1.0f, 0.0f, 0.5f},
		origin + 16.0f*vec{1.0f, 1.0f, 1.0f}
	};

	std::array<loc, 153> points{
		loc{16.0f,  0.0f,  8.0f},
		loc{15.0f,  1.0f,  7.5f},
		loc{16.0f,  1.0f,  8.5f},
		loc{14.0f,  2.0f,  7.0f},
		loc{15.0f,  2.0f,  8.0f},
		loc{16.0f,  2.0f,  9.0f},
		loc{13.0f,  3.0f,  6.5f},
		loc{14.0f,  3.0f,  7.5f},
		loc{15.0f,  3.0f,  8.5f},
		loc{16.0f,  3.0f,  9.5f},
		loc{12.0f,  4.0f,  6.0f},
		loc{13.0f,  4.0f,  7.0f},
		loc{14.0f,  4.0f,  8.0f},
		loc{15.0f,  4.0f,  9.0f},
		loc{16.0f,  4.0f, 10.0f},
		loc{11.0f,  5.0f,  5.5f},
		loc{12.0f,  5.0f,  6.5f},
		loc{13.0f,  5.0f,  7.5f},
		loc{14.0f,  5.0f,  8.5f},
		loc{15.0f,  5.0f,  9.5f},
		loc{16.0f,  5.0f, 10.5f},
		loc{10.0f,  6.0f,  5.0f},
		loc{11.0f,  6.0f,  6.0f},
		loc{12.0f,  6.0f,  7.0f},
		loc{13.0f,  6.0f,  8.0f},
		loc{14.0f,  6.0f,  9.0f},
		loc{15.0f,  6.0f, 10.0f},
		loc{16.0f,  6.0f, 11.0f},
		loc{ 9.0f,  7.0f,  4.5f},
		loc{10.0f,  7.0f,  5.5f},
		loc{11.0f,  7.0f,  6.5f},
		loc{12.0f,  7.0f,  7.5f},
		loc{13.0f,  7.0f,  8.5f},
		loc{14.0f,  7.0f,  9.5f},
		loc{15.0f,  7.0f, 10.5f},
		loc{16.0f,  7.0f, 11.5f},
		loc{ 8.0f,  8.0f,  4.0f},
		loc{ 9.0f,  8.0f,  5.0f},
		loc{10.0f,  8.0f,  6.0f},
		loc{11.0f,  8.0f,  7.0f},
		loc{12.0f,  8.0f,  8.0f},
		loc{13.0f,  8.0f,  9.0f},
		loc{14.0f,  8.0f, 10.0f},
		loc{15.0f,  8.0f, 11.0f},
		loc{16.0f,  8.0f, 12.0f},
		loc{ 7.0f,  9.0f,  3.5f},
		loc{ 8.0f,  9.0f,  4.5f},
		loc{ 9.0f,  9.0f,  5.5f},
		loc{10.0f,  9.0f,  6.5f},
		loc{11.0f,  9.0f,  7.5f},
		loc{12.0f,  9.0f,  8.5f},
		loc{13.0f,  9.0f,  9.5f},
		loc{14.0f,  9.0f, 10.5f},
		loc{15.0f,  9.0f, 11.5f},
		loc{16.0f,  9.0f, 12.5f},
		loc{ 6.0f, 10.0f,  3.0f},
		loc{ 7.0f, 10.0f,  4.0f},
		loc{ 8.0f, 10.0f,  5.0f},
		loc{ 9.0f, 10.0f,  6.0f},
		loc{10.0f, 10.0f,  7.0f},
		loc{11.0f, 10.0f,  8.0f},
		loc{12.0f, 10.0f,  9.0f},
		loc{13.0f, 10.0f, 10.0f},
		loc{14.0f, 10.0f, 11.0f},
		loc{15.0f, 10.0f, 12.0f},
		loc{16.0f, 10.0f, 13.0f},
		loc{ 5.0f, 11.0f,  2.5f},
		loc{ 6.0f, 11.0f,  3.5f},
		loc{ 7.0f, 11.0f,  4.5f},
		loc{ 8.0f, 11.0f,  5.5f},
		loc{ 9.0f, 11.0f,  6.5f},
		loc{10.0f, 11.0f,  7.5f},
		loc{11.0f, 11.0f,  8.5f},
		loc{12.0f, 11.0f,  9.5f},
		loc{13.0f, 11.0f, 10.5f},
		loc{14.0f, 11.0f, 11.5f},
		loc{15.0f, 11.0f, 12.5f},
		loc{16.0f, 11.0f, 13.5f},
		loc{ 4.0f, 12.0f,  2.0f},
		loc{ 5.0f, 12.0f,  3.0f},
		loc{ 6.0f, 12.0f,  4.0f},
		loc{ 7.0f, 12.0f,  5.0f},
		loc{ 8.0f, 12.0f,  6.0f},
		loc{ 9.0f, 12.0f,  7.0f},
		loc{10.0f, 12.0f,  8.0f},
		loc{11.0f, 12.0f,  9.0f},
		loc{12.0f, 12.0f, 10.0f},
		loc{13.0f, 12.0f, 11.0f},
		loc{14.0f, 12.0f, 12.0f},
		loc{15.0f, 12.0f, 13.0f},
		loc{16.0f, 12.0f, 14.0f},
		loc{ 3.0f, 13.0f,  1.5f},
		loc{ 4.0f, 13.0f,  2.5f},
		loc{ 5.0f, 13.0f,  3.5f},
		loc{ 6.0f, 13.0f,  4.5f},
		loc{ 7.0f, 13.0f,  5.5f},
		loc{ 8.0f, 13.0f,  6.5f},
		loc{ 9.0f, 13.0f,  7.5f},
		loc{10.0f, 13.0f,  8.5f},
		loc{11.0f, 13.0f,  9.5f},
		loc{12.0f, 13.0f, 10.5f},
		loc{13.0f, 13.0f, 11.5f},
		loc{14.0f, 13.0f, 12.5f},
		loc{15.0f, 13.0f, 13.5f},
		loc{16.0f, 13.0f, 14.5f},
		loc{ 2.0f, 14.0f,  1.0f},
		loc{ 3.0f, 14.0f,  2.0f},
		loc{ 4.0f, 14.0f,  3.0f},
		loc{ 5.0f, 14.0f,  4.0f},
		loc{ 6.0f, 14.0f,  5.0f},
		loc{ 7.0f, 14.0f,  6.0f},
		loc{ 8.0f, 14.0f,  7.0f},
		loc{ 9.0f, 14.0f,  8.0f},
		loc{10.0f, 14.0f,  9.0f},
		loc{11.0f, 14.0f, 10.0f},
		loc{12.0f, 14.0f, 11.0f},
		loc{13.0f, 14.0f, 12.0f},
		loc{14.0f, 14.0f, 13.0f},
		loc{15.0f, 14.0f, 14.0f},
		loc{16.0f, 14.0f, 15.0f},
		loc{ 1.0f, 15.0f,  0.5f},
		loc{ 2.0f, 15.0f,  1.5f},
		loc{ 3.0f, 15.0f,  2.5f},
		loc{ 4.0f, 15.0f,  3.5f},
		loc{ 5.0f, 15.0f,  4.5f},
		loc{ 6.0f, 15.0f,  5.5f},
		loc{ 7.0f, 15.0f,  6.5f},
		loc{ 8.0f, 15.0f,  7.5f},
		loc{ 9.0f, 15.0f,  8.5f},
		loc{10.0f, 15.0f,  9.5f},
		loc{11.0f, 15.0f, 10.5f},
		loc{12.0f, 15.0f, 11.5f},
		loc{13.0f, 15.0f, 12.5f},
		loc{14.0f, 15.0f, 13.5f},
		loc{15.0f, 15.0f, 14.5f},
		loc{16.0f, 15.0f, 15.5f},
		loc{ 0.0f, 16.0f, -0.0f},
		loc{ 1.0f, 16.0f,  1.0f},
		loc{ 2.0f, 16.0f,  2.0f},
		loc{ 3.0f, 16.0f,  3.0f},
		loc{ 4.0f, 16.0f,  4.0f},
		loc{ 5.0f, 16.0f,  5.0f},
		loc{ 6.0f, 16.0f,  6.0f},
		loc{ 7.0f, 16.0f,  7.0f},
		loc{ 8.0f, 16.0f,  8.0f},
		loc{ 9.0f, 16.0f,  9.0f},
		loc{10.0f, 16.0f, 10.0f},
		loc{11.0f, 16.0f, 11.0f},
		loc{12.0f, 16.0f, 12.0f},
		loc{13.0f, 16.0f, 13.0f},
		loc{14.0f, 16.0f, 14.0f},
		loc{15.0f, 16.0f, 15.0f},
		loc{16.0f, 16.0f, 16.0f}
	};

	project_from_above(T, [index = 0, &points](loc p) mutable {
		EXPECT_EQ(p, points[index]);
		++index;
	});
}


TESTCASE(geosimd_triangle_project_from_above_corner_top)
{
	using loc = geosimd::euclidian_space<float, 3>::location;
	using vec = geosimd::euclidian_space<float, 3>::displacement;

	auto const origin = loc{0.0f, 0.0f, 0.0f};

	geosimd::triangle T{
		origin + 16.0f*vec{0.0f, 0.0f, 0.0f},
		origin + 16.0f*vec{1.0f, 0.0f, 1.0f},
		origin + 16.0f*vec{1.0f, 1.0f, 0.5f},
	};

	std::array<loc, 153> points{
		loc{0.0f, 0.0f, -0.0f},
		loc{1.0f, 0.0f, 1.0f},
		loc{2.0f, 0.0f, 2.0f},
		loc{3.0f, 0.0f, 3.0f},
		loc{4.0f, 0.0f, 4.0f},
		loc{5.0f, 0.0f, 5.0f},
		loc{6.0f, 0.0f, 6.0f},
		loc{7.0f, 0.0f, 7.0f},
		loc{8.0f, 0.0f, 8.0f},
		loc{9.0f, 0.0f, 9.0f},
		loc{10.0f, 0.0f, 10.0f},
		loc{11.0f, 0.0f, 11.0f},
		loc{12.0f, 0.0f, 12.0f},
		loc{13.0f, 0.0f, 13.0f},
		loc{14.0f, 0.0f, 14.0f},
		loc{15.0f, 0.0f, 15.0f},
		loc{16.0f, 0.0f, 16.0f},
		loc{1.0f, 1.0f, 0.5f},
		loc{2.0f, 1.0f, 1.5f},
		loc{3.0f, 1.0f, 2.5f},
		loc{4.0f, 1.0f, 3.5f},
		loc{5.0f, 1.0f, 4.5f},
		loc{6.0f, 1.0f, 5.5f},
		loc{7.0f, 1.0f, 6.5f},
		loc{8.0f, 1.0f, 7.5f},
		loc{9.0f, 1.0f, 8.5f},
		loc{10.0f, 1.0f, 9.5f},
		loc{11.0f, 1.0f, 10.5f},
		loc{12.0f, 1.0f, 11.5f},
		loc{13.0f, 1.0f, 12.5f},
		loc{14.0f, 1.0f, 13.5f},
		loc{15.0f, 1.0f, 14.5f},
		loc{16.0f, 1.0f, 15.5f},
		loc{2.0f, 2.0f, 1.0f},
		loc{3.0f, 2.0f, 2.0f},
		loc{4.0f, 2.0f, 3.0f},
		loc{5.0f, 2.0f, 4.0f},
		loc{6.0f, 2.0f, 5.0f},
		loc{7.0f, 2.0f, 6.0f},
		loc{8.0f, 2.0f, 7.0f},
		loc{9.0f, 2.0f, 8.0f},
		loc{10.0f, 2.0f, 9.0f},
		loc{11.0f, 2.0f, 10.0f},
		loc{12.0f, 2.0f, 11.0f},
		loc{13.0f, 2.0f, 12.0f},
		loc{14.0f, 2.0f, 13.0f},
		loc{15.0f, 2.0f, 14.0f},
		loc{16.0f, 2.0f, 15.0f},
		loc{3.0f, 3.0f, 1.5f},
		loc{4.0f, 3.0f, 2.5f},
		loc{5.0f, 3.0f, 3.5f},
		loc{6.0f, 3.0f, 4.5f},
		loc{7.0f, 3.0f, 5.5f},
		loc{8.0f, 3.0f, 6.5f},
		loc{9.0f, 3.0f, 7.5f},
		loc{10.0f, 3.0f, 8.5f},
		loc{11.0f, 3.0f, 9.5f},
		loc{12.0f, 3.0f, 10.5f},
		loc{13.0f, 3.0f, 11.5f},
		loc{14.0f, 3.0f, 12.5f},
		loc{15.0f, 3.0f, 13.5f},
		loc{16.0f, 3.0f, 14.5f},
		loc{4.0f, 4.0f, 2.0f},
		loc{5.0f, 4.0f, 3.0f},
		loc{6.0f, 4.0f, 4.0f},
		loc{7.0f, 4.0f, 5.0f},
		loc{8.0f, 4.0f, 6.0f},
		loc{9.0f, 4.0f, 7.0f},
		loc{10.0f, 4.0f, 8.0f},
		loc{11.0f, 4.0f, 9.0f},
		loc{12.0f, 4.0f, 10.0f},
		loc{13.0f, 4.0f, 11.0f},
		loc{14.0f, 4.0f, 12.0f},
		loc{15.0f, 4.0f, 13.0f},
		loc{16.0f, 4.0f, 14.0f},
		loc{5.0f, 5.0f, 2.5f},
		loc{6.0f, 5.0f, 3.5f},
		loc{7.0f, 5.0f, 4.5f},
		loc{8.0f, 5.0f, 5.5f},
		loc{9.0f, 5.0f, 6.5f},
		loc{10.0f, 5.0f, 7.5f},
		loc{11.0f, 5.0f, 8.5f},
		loc{12.0f, 5.0f, 9.5f},
		loc{13.0f, 5.0f, 10.5f},
		loc{14.0f, 5.0f, 11.5f},
		loc{15.0f, 5.0f, 12.5f},
		loc{16.0f, 5.0f, 13.5f},
		loc{6.0f, 6.0f, 3.0f},
		loc{7.0f, 6.0f, 4.0f},
		loc{8.0f, 6.0f, 5.0f},
		loc{9.0f, 6.0f, 6.0f},
		loc{10.0f, 6.0f, 7.0f},
		loc{11.0f, 6.0f, 8.0f},
		loc{12.0f, 6.0f, 9.0f},
		loc{13.0f, 6.0f, 10.0f},
		loc{14.0f, 6.0f, 11.0f},
		loc{15.0f, 6.0f, 12.0f},
		loc{16.0f, 6.0f, 13.0f},
		loc{7.0f, 7.0f, 3.5f},
		loc{8.0f, 7.0f, 4.5f},
		loc{9.0f, 7.0f, 5.5f},
		loc{10.0f, 7.0f, 6.5f},
		loc{11.0f, 7.0f, 7.5f},
		loc{12.0f, 7.0f, 8.5f},
		loc{13.0f, 7.0f, 9.5f},
		loc{14.0f, 7.0f, 10.5f},
		loc{15.0f, 7.0f, 11.5f},
		loc{16.0f, 7.0f, 12.5f},
		loc{8.0f, 8.0f, 4.0f},
		loc{9.0f, 8.0f, 5.0f},
		loc{10.0f, 8.0f, 6.0f},
		loc{11.0f, 8.0f, 7.0f},
		loc{12.0f, 8.0f, 8.0f},
		loc{13.0f, 8.0f, 9.0f},
		loc{14.0f, 8.0f, 10.0f},
		loc{15.0f, 8.0f, 11.0f},
		loc{16.0f, 8.0f, 12.0f},
		loc{9.0f, 9.0f, 4.5f},
		loc{10.0f, 9.0f, 5.5f},
		loc{11.0f, 9.0f, 6.5f},
		loc{12.0f, 9.0f, 7.5f},
		loc{13.0f, 9.0f, 8.5f},
		loc{14.0f, 9.0f, 9.5f},
		loc{15.0f, 9.0f, 10.5f},
		loc{16.0f, 9.0f, 11.5f},
		loc{10.0f, 10.0f, 5.0f},
		loc{11.0f, 10.0f, 6.0f},
		loc{12.0f, 10.0f, 7.0f},
		loc{13.0f, 10.0f, 8.0f},
		loc{14.0f, 10.0f, 9.0f},
		loc{15.0f, 10.0f, 10.0f},
		loc{16.0f, 10.0f, 11.0f},
		loc{11.0f, 11.0f, 5.5f},
		loc{12.0f, 11.0f, 6.5f},
		loc{13.0f, 11.0f, 7.5f},
		loc{14.0f, 11.0f, 8.5f},
		loc{15.0f, 11.0f, 9.5f},
		loc{16.0f, 11.0f, 10.5f},
		loc{12.0f, 12.0f, 6.0f},
		loc{13.0f, 12.0f, 7.0f},
		loc{14.0f, 12.0f, 8.0f},
		loc{15.0f, 12.0f, 9.0f},
		loc{16.0f, 12.0f, 10.0f},
		loc{13.0f, 13.0f, 6.5f},
		loc{14.0f, 13.0f, 7.5f},
		loc{15.0f, 13.0f, 8.5f},
		loc{16.0f, 13.0f, 9.5f},
		loc{14.0f, 14.0f, 7.0f},
		loc{15.0f, 14.0f, 8.0f},
		loc{16.0f, 14.0f, 9.0f},
		loc{15.0f, 15.0f, 7.5f},
		loc{16.0f, 15.0f, 8.5f},
		loc{16.0f, 16.0f, 8.0f}
	};

	project_from_above(T, [index = 0, &points](loc p) mutable {
		EXPECT_EQ(p, points[index]);
		++index;
	});
}